package learnSe.part9;
//9.网络编程
//
//1.概述
//    1.场景
//        用于网络上不同计算机程序间数据交换
//2.网络编程三要素
//    1.IP    每台网络终端在网络中都有一个独立的地址，我们在网络中传输数据就是使用这个地址
//        1.常用指令
//            ipconfig    查看本机ip
//            ping        测试连接
//        2.常用IP
//            127.0.0.1   本机地址
//            255.255.255.255 广播地址
//    2.端口号   每个程序在设备上的唯一标识
//        1.每个网络程序都需要绑定一个端口号，传输数据的时候除了确定发到哪台机器上，还要明确发到哪个程序
//        2.范围：0-65535，编写网络应用就需要绑定一个端口号，尽量使用1024以上的，1024以下的基本上都被系统程序占用了
//        3.常用端口
//            mysql: 3306
//            oracle: 1521
//            web: 80
//            tomcat: 8080
//            QQ: 4000
//    3.协议    计算机网络中进行数据交换而建立的规则、标准或约定的集合
//        UDP 面向无连接，数据不安全，速度快。不区分客户端与服务端
//        TCP 面向连接（三次握手），数据安全，速度略低。分为客户端和服务端
//            三次握手: 客户端先向服务端发起请求, 服务端响应请求, 传输数据
//3.Socket
//    1.概述
//        IP+端口=套接字
//        通信的两端都有Socket，网络通信其实就是Socket间的通信，数据在两个Socket间通过IO流传输
//    2.Socket看作是通信的目标，通过IO流进行数据交换

public class NetAGaiShu {

    //UDP传输
}
